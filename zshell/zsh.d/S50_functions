########################################################
#-------------- BASH FUNCTIONS TEMPLATE ---------------#
########################################################

#--------------------------------------------------
#    OS-specific functions
#--------------------------------------------------
os=${OSTYPE//[0-9.]/}
dir=$(dirname $0)
if [ -f "${dir}/functions/${os}" ]; then
  source ${dir}/functions/${os}
fi

#-------------------------------------------------------
#    Bash function definitions
#-------------------------------------------------------

#/**
# * Archive a set of files
# * 
# * @author    Aaron Bach <aaron@bachyaproductions.com>
# * @copyright 2009 Aaron Bach (http://www.bachyaproductions.com)
# * @license   http://www.opensource.org/licenses/bsd-license.php New BSD Licence
# * @link      http://www.bachyaproductions.com
# */
archive()
{
  if [ "$#" -ne 2 ] || [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
    echo "Usage: archive [--tgz --zip --7z] [path/to/directory]" >&2
    return 1
  fi
  
  if [ ! -d $2 ]; then
    echo "$2 is not a valid directory of files"
    return 1
  else
    arch_base_name=$(basename $2)
    case $1 in
      --tgz)  tar cvf ${arch_base_name}.tar.gz $2 ;;
      --zip)  zip ${arch_base_name}.zip $2        ;;
      --7z)   7za a ${arch_base_name}.7z $2       ;;
      *)                                          ;;  
    esac
  fi
}

#/**
# * Unarchive many different archive types
# * 
# * @author    Aaron Bach <aaron@bachyaproductions.com>
# * @copyright 2009 Aaron Bach (http://www.bachyaproductions.com)
# * @license   http://www.opensource.org/licenses/bsd-license.php New BSD Licence
# * @link      http://www.bachyaproductions.com
# */
extract() 
{
  if [ "$#" -ne 1 ] || [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
    echo "Usage: extract [archive]" >&2
    return 1
  fi
  
  if [ -f $1 ]; then
    case $1 in
      *.tar.bz2)  tar xvjf $1     ;;
      *.tbz)      tar xvjf $1     ;;
      *.tar.gz)   tar xvzf $1     ;;
      *.bz2)      bunzip2 $1      ;;
      *.gz)       gunzip $1       ;;
      *.tar)      tar xvf $1      ;;
      *.tbz2)     tar xvjf $1     ;;
      *.tgz)      tar xvzf $1     ;;
      *.zip)      unzip $1        ;;
      *.7z)       7za x $1        ;;
      *)          echo "'$1' is not a valid archive" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

#/**
# * Looks for a process (and removes the grep line)
# * 
# * @author    Unknown
# */
process() 
{
  if [ "$#" -ne 1 ] || [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
    echo "Usage: process [process-name]" >&2
    return 1
  fi
  
  ps aux | grep -i "$1" | grep -v grep
}

#/**
# * Switches the filenames of two files
# * 
# * @author    Aaron Bach <aaron@bachyaproductions.com>
# * @copyright 2009 Aaron Bach (http://www.bachyaproductions.com)
# * @license   http://www.opensource.org/licenses/bsd-license.php New BSD Licence
# * @link      http://www.bachyaproductions.com
# */
switch() 
{
  if [ "$#" -ne 2 ] || [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
    echo "Usage: switch [file1] [file2]" >&2
    return 1
  fi

  echo "* Switching '${1}' and '${2}'..." 
  mv $1 ${1}.tmp && mv $2 $1 && mv ${1}.tmp $2
  echo "* Files switched!"
}

#/**
# * Does cd ../ a given amount of times
# * 
# * @author    Unknown
# */
up()
{
  if [ "$#" -gt 1 ] || [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
    echo "Usage: up [number-of-dirs]" >&2
    return 1
  fi
  
  local arg=${1:-1}
  local dir=""
  while [ $arg -gt 0 ]; do
    dir="../${dir}"
    arg=$(($arg - 1));
  done
  cd $dir >&/dev/null
}

#/**
# * Determines whether a function is recognized by the shell
# * 
# * @author    Aaron Bach <aaron@bachyaproductions.com>
# * @copyright 2009 Aaron Bach (http://www.bachyaproductions.com)
# * @license   http://www.opensource.org/licenses/bsd-license.php New BSD Licence
# * @link      http://www.bachyaproductions.com
# */
fn_exists()
{
  type $1 | grep -q 'shell'
}
